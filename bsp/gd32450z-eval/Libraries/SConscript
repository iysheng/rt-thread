import rtconfig
import os
from building import *

# get current directory
cwd = GetCurrentDir()

# The set of source files associated with this SConscript file.

src = Glob('GD32F4xx_standard_peripheral/Source/*.c')
src += [cwd + '/CMSIS/GD/GD32F4xx/Source/system_gd32f4xx.c']

#add for startup script
if rtconfig.CROSS_TOOL == 'gcc':
    src += [cwd + '/CMSIS/GD/GD32F4xx/Source/GCC/startup_gd32f4xx.S']
elif rtconfig.CROSS_TOOL == 'keil':
    src += [cwd + '/CMSIS/GD/GD32F4xx/Source/ARM/startup_gd32f4xx.s']
elif rtconfig.CROSS_TOOL == 'iar':
    src += [cwd + '/CMSIS/GD/GD32F4xx/Source/IAR/startup_gd32f4xx.s']

path = [
    cwd + '/CMSIS/GD/GD32F4xx/Include',
    cwd + '/CMSIS',
    cwd + '/GD32F4xx_standard_peripheral/Include',]

bsp_usb_subdirs = []
subdir = ''
if GetDepend(['RT_USING_BSP_USB']):
    bsp_usb_subdirs = [f.path for f in os.scandir(cwd + '/GD32F4xx_usb_library/') if f.is_dir()]
    for subdir in bsp_usb_subdirs:
        src += Glob(os.path.join(cwd + '/GD32F4xx_usb_library/', subdir, "*.c"))
        path += [cwd + '/GD32F4xx_usb_library/' + subdir]

CPPDEFINES = ['USE_STDPERIPH_DRIVER']

group = DefineGroup('Libraries', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)

Return('group')
